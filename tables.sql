DROP TABLE IF EXISTS Schedule CASCADE;
DROP TABLE IF EXISTS Cruise CASCADE;
DROP TABLE IF EXISTS Captain CASCADE;
DROP TABLE IF EXISTS Ship CASCADE;
DROP TABLE IF EXISTS Reservation CASCADE;
DROP TABLE IF EXISTS Crew CASCADE;
DROP TABLE IF EXISTS Technician CASCADE;
DROP TABLE IF EXISTS Customer CASCADE;
DROP TABLE IF EXISTS Waitlist CASCADE;
DROP TABLE IF EXISTS Confirmed CASCADE;
DROP TABLE IF EXISTS Reserved CASCADE;
DROP TABLE IF EXISTS request CASCADE;

CREATE TABLE Schedule(cnum INT NOT NULL, day CHAR[10], depart_time CHAR[10], arrive_time CHAR[10], 
PRIMARY KEY (cnum), 
FOREIGN KEY(cnum) REFERENCES Cruise(cnum) ON DELETE CASCADE);

CREATE TABLE Captain(ID INT NOT NULL, name CHAR[10], 
PRIMARY KEY (ID));

CREATE TABLE Ship(model CHAR[10] NOT NULL, ID INT NOT NULL, make CHAR[10] NOT NULL, 
age INT NOT NULL, Seats INT NOT NULL, 
PRIMARY KEY (ID)); 

CREATE TABLE Reservation(Rnum INT NOT NULL, PRIMARY KEY (Rnum));

CREATE TABLE Customer(first_name CHAR[10], last_name CHAR[10], gender CHAR[10], date_of_birth CHAR[10] NOT NULL, 
address CHAR[64] NOT NULL, contact_num INT NOT NULL, ID INT NOT NULL, Zip_code INT NOT NULL,cnum INT NOT NULL, 
PRIMARY KEY (ID), 
FOREIGN KEY(cnum) REFERENCES Cruise(cnum) ON DELETE CASCADE);

CREATE TABLE Crew(name CHAR[10], ID INT NOT NULL, 
PRIMARY KEY (ID));

CREATE TABLE Schedule(cnum INT NOT NULL, day CHAR[10], depart_time CHAR[10], arrive_time CHAR[10],
PRIMARY KEY (cnum));

CREATE TABLE Cruise[cnum INT NOT NULL, cost INT NOT NULL, num_sold INT NOT NULL, num_stops INT NOT NULL, actual_arrive_date CHAR[10], actual_arrive_time CHAR[10], actual_depart_date CHAR[10], actual_depart_time CHAR[10], source CHAR[10], destination CHAR[10],
PRIMARY KEY (cnum));

CREATE TABLE Works(w-num INT NOT NULL, wID NOT NULL,
PRIMARY KEY (w-num, wID),
FOREIGN KEY (w-num) REFERENCES Cruise(cnum) ON DELETE CASCADE,
FOREIGN KEY (wID) REFERENCES Crew(ID) ON DELETE CASCADE);

CREATE TABLE CruiseReservation(Rnum INT NOT NULL, c-num INT NOT NULL, 
PRIMARY KEY(Rnum,cnum),
FOREIGN KEY (Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE,
FOREIGN KEY (cnum) REFERENCES Cruise(c-num) ON DELETE CASCADE); 

CREATE TABLE CruiseCustomer(CID INT NOT NULL, c-num INT NOT NULL,
PRIMARY KEY(CID,cnum),
FOREIGN KEY (CID) REFERENCES Customer(ID) ON DELETE CASCADE,
FOREIGN KEY (c-num) REFERENCES Cruise(cnum) ON DELETE CASCADE);

CREATE TABLE Waitlist (W_Rnum INT NOT NULL,
PRIMARY KEY (W_Rnum),
FOREIGN KEY (W_Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE);

CREATE TABLE Confirmed (C_Rnum INT NOT NULL,
PRIMARY KEY (C_Rnum),
FOREIGN KEY (C_Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE);

CREATE TABLE Reserved (W_Rnum INT NOT NULL,
PRIMARY KEY (R_Rnum),
FOREIGN KEY (R_Rnum) REFERENCES Reservation(Rnum) ON DELETE CASCADE);

CREATE TABLE Technician(ID INT NOT NULL,
PRIMARY KEY (ID));

CREATE TABLE request (ID INT NOT NULL, CID INT NOT NULL, SID INT NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY(CID) REFERENCES Captain(ID)
FOREIGN KEY(SID) REFERENCES Ship(ID));

CREATE TABLE repairs(r_date CHAR[10], code INT NOT NULL, SID INT NOT NULL, TID INT NOT NULL
PRIMARY KEY (SID, TID),
FORIEGN KEY (SID) REFERENCES Ship,
FOREIGN KEY (TID) REFERENCES Technician);

CREATE TABLE CruiseSchedule(cnum INT NOT NULL, cnum INT NOT NULL, 
PRIMARY KEY (cnum, scnum),
FOREIGN KEY (cnum) REFERENCES Cruise(cnum),
FOREIGN KEY (scnum) REFERENCES Schedule(cnum)ON DELETE CASCADE);
                                 
CREATE TABLE CruiseCaptain(cnum INT NOT NULL, CID INT NOT NULL, 
PRIMARY KEY (cnum, CID),
FOREIGN KEY (cnum) REFERENCES Cruise(cnum),
FOREIGN KEY (CID) REFERENCES Captain(ID)ON DELETE CASCADE);

CREATE TABLE CruiseShip(cnum INT NOT NULL, SID INT NOT NULL, 
PRIMARY KEY (cnum, SID),
FOREIGN KEY (cnum) REFERENCES Cruise(cnum),
FOREIGN KEY (SID) REFERENCES Ship(ID)ON DELETE CASCADE);
                                 
CREATE TABLE CruiseCrew(cnum INT NOT NULL, CID2 INT NOT NULL, 
PRIMARY KEY (cnum, CID2),
FOREIGN KEY (cnum) REFERENCES Cruise(cnum),
FOREIGN KEY (CID2) REFERENCES Customer(ID)ON DELETE CASCADE);
                                 









 







